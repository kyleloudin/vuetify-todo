{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport Localbase from \"localbase\";\nlet db = new Localbase(\"db\");\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [{\n      id: 1,\n      title: \"Wake Up\",\n      done: false,\n      dueDate: \"2023-03-23\"\n    }, {\n      id: 2,\n      title: \"Shower\",\n      done: false,\n      dueDate: \"2023-03-24\"\n    }, {\n      id: 3,\n      title: \"Eat Breakfast\",\n      done: false,\n      dueDate: null\n    }],\n    snackbar: {\n      show: false,\n      text: \"\"\n    },\n    sorting: false\n  },\n  getters: {},\n  mutations: {\n    setSearch(state, value) {\n      state.search = value;\n    },\n    addTask(state, newTask) {\n      state.tasks.push(newTask);\n    },\n    doneTask(state, id) {\n      let task = state.tasks.filter(task => task.id === id)[0];\n      task.done = !task.done;\n    },\n    deleteTask(state, id) {\n      state.tasks = state.tasks.filter(task => task.id !== id);\n    },\n    updateTaskTitle(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0];\n      task.title = payload.title;\n    },\n    updateTaskDueDate(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0];\n      task.dueDate = payload.dueDate;\n    },\n    setTasks(state, tasks) {\n      state.tasks = tasks;\n    },\n    showSnackBar(state, text) {\n      let timeout = 0;\n      if (state.snackbar.show) {\n        state.snackbar.show = false;\n        timeout = 300;\n      }\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = text;\n      }, timeout);\n    },\n    hideSnackBar(state) {\n      state.snackbar.show = false;\n    },\n    toggleSorting(state) {\n      state.sorting = !state.sorting;\n    }\n  },\n  actions: {\n    addTask({\n      commit\n    }, newTaskTitle) {\n      let newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null\n      };\n      db.collection(\"tasks\").add(newTask).then(() => {\n        commit(\"addTask\", newTask);\n        commit(\"showSnackBar\", \"Task Added!\");\n      });\n    },\n    doneTask({\n      state,\n      commit\n    }, id) {\n      let task = state.tasks.filter(task => task.id === id)[0];\n      db.collection(\"tasks\").doc({\n        id: id\n      }).update({\n        done: !task.done\n      }).then(() => {\n        commit(\"doneTask\", id);\n      });\n    },\n    deleteTask({\n      commit\n    }, id) {\n      db.collection(\"tasks\").doc({\n        id: id\n      }).delete().then(() => {\n        commit(\"showSnackBar\", \"Task Deleted!\");\n        commit(\"deleteTask\", id);\n      });\n    },\n    updateTaskTitle({\n      commit\n    }, payload) {\n      db.collection(\"tasks\").dot({\n        id: payload.id\n      }).update(() => {\n        title: payload.title;\n      }).then(() => {\n        commit(\"updateTaskTitle\", payload);\n        commit(\"showSnackBar\", \"Title Updated!\");\n      });\n    },\n    updateTaskDueDate({\n      commit\n    }, payload) {\n      db.collection(\"tasks\").dot({\n        id: payload.id\n      }).update(() => {\n        dueDate: payload.dueDate;\n      }).then(() => {\n        commit(\"updateTaskDueDate\", payload);\n        commit(\"showSnackBar\", \"Due Date Updated!\");\n      });\n    },\n    setTasks({\n      commit\n    }, tasks) {\n      commit();\n    },\n    getTasks({\n      commit\n    }) {\n      db.collection(\"tasks\").get().then(tasks => {\n        commit(\"setTasks\", tasks);\n      });\n    }\n  },\n  getters: {\n    tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks;\n      }\n      return state.tasks.toLowerCase().filter(task => task.title.includes(state.search.toLowerCase()));\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","Localbase","db","use","Store","state","appTitle","process","env","VUE_APP_TITLE","search","tasks","id","title","done","dueDate","snackbar","show","text","sorting","getters","mutations","setSearch","value","addTask","newTask","push","doneTask","task","filter","deleteTask","updateTaskTitle","payload","updateTaskDueDate","setTasks","showSnackBar","timeout","setTimeout","hideSnackBar","toggleSorting","actions","commit","newTaskTitle","Date","now","collection","add","then","doc","update","delete","dot","getTasks","get","tasksFiltered","toLowerCase","includes","modules"],"sources":["/Users/kyleloudin/Desktop/repo/vuetify-todo/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport Localbase from \"localbase\";\nlet db = new Localbase(\"db\");\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [\n      {\n        id: 1,\n        title: \"Wake Up\",\n        done: false,\n        dueDate: \"2023-03-23\",\n      },\n      {\n        id: 2,\n        title: \"Shower\",\n        done: false,\n        dueDate: \"2023-03-24\",\n      },\n      {\n        id: 3,\n        title: \"Eat Breakfast\",\n        done: false,\n        dueDate: null,\n      },\n    ],\n    snackbar: {\n      show: false,\n      text: \"\",\n    },\n    sorting: false,\n  },\n  getters: {},\n  mutations: {\n    setSearch(state, value) {\n      state.search = value;\n    },\n    addTask(state, newTask) {\n      state.tasks.push(newTask);\n    },\n    doneTask(state, id) {\n      let task = state.tasks.filter((task) => task.id === id)[0];\n      task.done = !task.done;\n    },\n    deleteTask(state, id) {\n      state.tasks = state.tasks.filter((task) => task.id !== id);\n    },\n    updateTaskTitle(state, payload) {\n      let task = state.tasks.filter((task) => task.id === payload.id)[0];\n      task.title = payload.title;\n    },\n    updateTaskDueDate(state, payload) {\n      let task = state.tasks.filter((task) => task.id === payload.id)[0];\n      task.dueDate = payload.dueDate;\n    },\n    setTasks(state, tasks) {\n      state.tasks = tasks;\n    },\n    showSnackBar(state, text) {\n      let timeout = 0;\n      if (state.snackbar.show) {\n        state.snackbar.show = false;\n        timeout = 300;\n      }\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = text;\n      }, timeout);\n    },\n    hideSnackBar(state) {\n      state.snackbar.show = false;\n    },\n    toggleSorting(state) {\n      state.sorting = !state.sorting;\n    },\n  },\n  actions: {\n    addTask({ commit }, newTaskTitle) {\n      let newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null,\n      };\n      db.collection(\"tasks\")\n        .add(newTask)\n        .then(() => {\n          commit(\"addTask\", newTask);\n          commit(\"showSnackBar\", \"Task Added!\");\n        });\n    },\n    doneTask({ state, commit }, id) {\n      let task = state.tasks.filter((task) => task.id === id)[0];\n      db.collection(\"tasks\")\n        .doc({ id: id })\n        .update({\n          done: !task.done,\n        })\n        .then(() => {\n          commit(\"doneTask\", id);\n        });\n    },\n    deleteTask({ commit }, id) {\n      db.collection(\"tasks\")\n        .doc({ id: id })\n        .delete()\n        .then(() => {\n          commit(\"showSnackBar\", \"Task Deleted!\");\n          commit(\"deleteTask\", id);\n        });\n    },\n    updateTaskTitle({ commit }, payload) {\n      db.collection(\"tasks\")\n        .dot({ id: payload.id })\n        .update(() => {\n          title: payload.title;\n        })\n        .then(() => {\n          commit(\"updateTaskTitle\", payload);\n          commit(\"showSnackBar\", \"Title Updated!\");\n        });\n    },\n    updateTaskDueDate({ commit }, payload) {\n      db.collection(\"tasks\")\n        .dot({ id: payload.id })\n        .update(() => {\n          dueDate: payload.dueDate;\n        })\n        .then(() => {\n          commit(\"updateTaskDueDate\", payload);\n          commit(\"showSnackBar\", \"Due Date Updated!\");\n        });\n    },\n    setTasks({ commit }, tasks) {\n      commit()\n    },\n    getTasks({ commit }) {\n      db.collection(\"tasks\")\n        .get()\n        .then((tasks) => {\n          commit(\"setTasks\", tasks);\n        });\n    },\n  },\n  getters: {\n    tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks;\n      }\n      return state.tasks\n        .toLowerCase()\n        .filter((task) => task.title.includes(state.search.toLowerCase()));\n    },\n  },\n  modules: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}