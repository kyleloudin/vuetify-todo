{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport Localbase from 'localbase';\nlet db = new Localbase('db');\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [{\n      id: 1,\n      title: \"Wake Up\",\n      done: false,\n      dueDate: \"2023-03-23\"\n    }, {\n      id: 2,\n      title: \"Shower\",\n      done: false,\n      dueDate: \"2023-03-24\"\n    }, {\n      id: 3,\n      title: \"Eat Breakfast\",\n      done: false,\n      dueDate: null\n    }],\n    snackbar: {\n      show: false,\n      text: \"\"\n    },\n    sorting: false\n  },\n  getters: {},\n  mutations: {\n    setSearch(state, value) {\n      state.search = value;\n    },\n    addTask(state, newTaskTitle) {\n      state.tasks.push(newTask);\n    },\n    doneTask(state, id) {\n      let task = state.tasks.filter(task => task.id === id)[0];\n      task.done = !task.done;\n    },\n    deleteTask(state, id) {\n      state.tasks = state.tasks.filter(task => task.id !== id);\n    },\n    updateTaskTitle(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0];\n      task.title = payload.title;\n    },\n    updateTaskDueDate(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0];\n      task.dueDate = payload.dueDate;\n    },\n    setTasks(state, tasks) {\n      state.tasks = tasks;\n    },\n    showSnackBar(state, text) {\n      let timeout = 0;\n      if (state.snackbar.show) {\n        state.snackbar.show = false;\n        timeout = 300;\n      }\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = text;\n      }, timeout);\n    },\n    hideSnackBar(state) {\n      state.snackbar.show = false;\n    },\n    toggleSorting(state) {\n      state.sorting = !state.sorting;\n    }\n  },\n  actions: {\n    addTask({\n      commit\n    }, newTaskTitle) {\n      let newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null\n      };\n      commit(\"addTask\", newTaskTitle);\n      commit(\"showSnackBar\", \"Task Added!\");\n    },\n    deleteTask({\n      commit\n    }, id) {\n      commit(\"deleteTask\", id);\n      commit(\"showSnackBar\", \"Task Deleted!\");\n    },\n    updateTaskTitle({\n      commit\n    }, payload) {\n      commit(\"updateTaskTitle\", payload);\n      commit(\"showSnackBar\", \"Title Updated!\");\n    },\n    updateTaskDueDate({\n      commit\n    }, payload) {\n      commit(\"updateTaskDueDate\", payload);\n      commit(\"showSnackBar\", \"Due Date Updated!\");\n    }\n  },\n  getters: {\n    tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks;\n      }\n      return state.tasks.toLowerCase().filter(task => task.title.includes(state.search.toLowerCase()));\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","Localbase","db","use","Store","state","appTitle","process","env","VUE_APP_TITLE","search","tasks","id","title","done","dueDate","snackbar","show","text","sorting","getters","mutations","setSearch","value","addTask","newTaskTitle","push","newTask","doneTask","task","filter","deleteTask","updateTaskTitle","payload","updateTaskDueDate","setTasks","showSnackBar","timeout","setTimeout","hideSnackBar","toggleSorting","actions","commit","Date","now","tasksFiltered","toLowerCase","includes","modules"],"sources":["/Users/kyleloudin/Desktop/repo/vuetify-todo/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport Localbase from 'localbase'\nlet db = new Localbase('db')\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [\n      {\n        id: 1,\n        title: \"Wake Up\",\n        done: false,\n        dueDate: \"2023-03-23\",\n      },\n      {\n        id: 2,\n        title: \"Shower\",\n        done: false,\n        dueDate: \"2023-03-24\",\n      },\n      {\n        id: 3,\n        title: \"Eat Breakfast\",\n        done: false,\n        dueDate: null,\n      },\n    ],\n    snackbar: {\n      show: false,\n      text: \"\",\n    },\n    sorting: false\n  },\n  getters: {},\n  mutations: {\n    setSearch(state, value) {\n      state.search = value;\n    },\n    addTask(state, newTaskTitle) {\n      state.tasks.push(newTask);\n    },\n    doneTask(state, id) {\n      let task = state.tasks.filter((task) => task.id === id)[0];\n      task.done = !task.done;\n    },\n    deleteTask(state, id) {\n      state.tasks = state.tasks.filter((task) => task.id !== id);\n    },\n    updateTaskTitle(state, payload) {\n      let task = state.tasks.filter((task) => task.id === payload.id)[0];\n      task.title = payload.title;\n    },\n    updateTaskDueDate(state, payload) {\n      let task = state.tasks.filter((task) => task.id === payload.id)[0];\n      task.dueDate = payload.dueDate;\n    },\n    setTasks(state, tasks) {\n      state.tasks = tasks\n    },\n    showSnackBar(state, text) {\n      let timeout = 0;\n      if (state.snackbar.show) {\n        state.snackbar.show = false;\n        timeout = 300;\n      }\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = text;\n      }, timeout);\n    },\n    hideSnackBar(state) {\n      state.snackbar.show = false;\n    },\n    toggleSorting(state) {\n      state.sorting = !state.sorting\n    }\n  },\n  actions: {\n    addTask({ commit }, newTaskTitle) {\n      let newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null,\n      };\n      commit(\"addTask\", newTaskTitle);\n      commit(\"showSnackBar\", \"Task Added!\");\n    },\n    deleteTask({ commit }, id) {\n      commit(\"deleteTask\", id);\n      commit(\"showSnackBar\", \"Task Deleted!\");\n    },\n    updateTaskTitle({ commit }, payload) {\n      commit(\"updateTaskTitle\", payload);\n      commit(\"showSnackBar\", \"Title Updated!\");\n    },\n    updateTaskDueDate({ commit }, payload) {\n      commit(\"updateTaskDueDate\", payload);\n      commit(\"showSnackBar\", \"Due Date Updated!\");\n    },\n  },\n  getters: {\n    tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks;\n      }\n      return state.tasks\n        .toLowerCase()\n        .filter((task) => task.title.includes(state.search.toLowerCase()));\n    },\n  },\n  modules: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}