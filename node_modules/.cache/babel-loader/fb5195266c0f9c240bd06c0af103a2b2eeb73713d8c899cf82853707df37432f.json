{"ast":null,"code":"import _objectSpread from \"/Users/kyleloudin/Desktop/repo/vuetify-todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { getObjectValueByPath, getPropertyFromItem, keyCodes } from '../../util/helpers';\nvar defaultMenuProps = _objectSpread(_objectSpread({}, VSelectMenuProps), {}, {\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n});\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    autoSelectFirst: {\n      type: Boolean,\n      \"default\": false\n    },\n    filter: {\n      type: Function,\n      \"default\": function _default(item, queryText, itemText) {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      \"default\": function _default() {\n        return defaultMenuProps;\n      }\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VSelect.options.computed.classes.call(this)), {}, {\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      });\n    },\n    computedItems: function computedItems() {\n      return this.filteredItems;\n    },\n    selectedValues: function selectedValues() {\n      var _this = this;\n      return this.selectedItems.map(function (item) {\n        return _this.getValue(item);\n      });\n    },\n    hasDisplayedItems: function hasDisplayedItems() {\n      var _this2 = this;\n      return this.hideSelected ? this.filteredItems.some(function (item) {\n        return !_this2.hasItem(item);\n      }) : this.filteredItems.length > 0;\n    },\n    currentRange: function currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n    filteredItems: function filteredItems() {\n      var _this3 = this;\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(function (item) {\n        var value = getPropertyFromItem(item, _this3.itemText);\n        var text = value != null ? String(value) : '';\n        return _this3.filter(item, String(_this3.internalSearch), text);\n      });\n    },\n    internalSearch: {\n      get: function get() {\n        return this.lazySearch;\n      },\n      set: function set(val) {\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val;\n          this.$emit('update:search-input', val);\n        }\n      }\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return false;\n    },\n    isDirty: function isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n    isSearching: function isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n    menuCanShow: function menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n    $_menuProps: function $_menuProps() {\n      var props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = \"v-autocomplete__content \".concat(props.contentClass || '').trim();\n      return _objectSpread(_objectSpread({}, defaultMenuProps), props);\n    },\n    searchIsDirty: function searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n    selectedItem: function selectedItem() {\n      var _this4 = this;\n      if (this.multiple) return null;\n      return this.selectedItems.find(function (i) {\n        return _this4.valueComparator(_this4.getValue(i), _this4.getValue(_this4.internalValue));\n      });\n    },\n    listData: function listData() {\n      var data = VSelect.options.computed.listData.call(this);\n      data.props = _objectSpread(_objectSpread({}, data.props), {}, {\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      });\n      return data;\n    }\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused: function isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.blur();\n        this.updateSelf();\n      }\n    },\n    isMenuActive: function isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = null;\n    },\n    items: function items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n    searchInput: function searchInput(val) {\n      this.lazySearch = val;\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n  created: function created() {\n    this.setSearch();\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n  methods: {\n    onFilteredItemsChanged: function onFilteredItemsChanged(val, oldVal) {\n      var _this5 = this;\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      if (!this.autoSelectFirst) {\n        var preSelectedItem = oldVal[this.$refs.menu.listIndex];\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(function (i) {\n            return i === preSelectedItem;\n          }));\n        } else {\n          this.setMenuIndex(-1);\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex);\n      }\n      this.$nextTick(function () {\n        if (!_this5.internalSearch || val.length !== 1 && !_this5.autoSelectFirst) return;\n        _this5.$refs.menu.getTiles();\n        if (_this5.autoSelectFirst && val.length) {\n          _this5.setMenuIndex(0);\n          _this5.$emit('update:list-index', _this5.$refs.menu.listIndex);\n        }\n      });\n    },\n    onInternalSearchChanged: function onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n    updateMenuDimensions: function updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n    changeSelectedIndex: function changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes[\"delete\"]) {\n        this.deleteCurrentItem();\n      }\n    },\n    deleteCurrentItem: function deleteCurrentItem() {\n      var curIndex = this.selectedIndex;\n      var curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      var lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n      var length = this.selectedItems.length;\n      var nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      var nextItem = this.selectedItems[nextIndex];\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null);\n      } else {\n        this.selectItem(curItem);\n      }\n      this.selectedIndex = nextIndex;\n    },\n    clearableCallback: function clearableCallback() {\n      this.internalSearch = null;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n    genInputSlot: function genInputSlot() {\n      var slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n    genSelections: function genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n    onClick: function onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n    onInput: function onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      var target = e.target;\n      var value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      if (!this.multiple && value === '') this.deleteCurrentItem();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n    onKeyDown: function onKeyDown(e) {\n      var keyCode = e.keyCode;\n      if (e.ctrlKey || ![keyCodes.home, keyCodes.end].includes(keyCode)) {\n        VSelect.options.methods.onKeyDown.call(this, e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n    onSpaceDown: function onSpaceDown(e) {},\n    onTabDown: function onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n    onUpDown: function onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n    selectItem: function selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n    setSelectedItems: function setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n    setSearch: function setSearch() {\n      var _this6 = this;\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(function () {\n        if (!_this6.multiple || !_this6.internalSearch || !_this6.isMenuActive) {\n          _this6.internalSearch = !_this6.selectedItems.length || _this6.multiple || _this6.hasSlot ? null : _this6.getText(_this6.selectedItem);\n        }\n      });\n    },\n    updateSelf: function updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n      if (!this.multiple && !this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n    hasItem: function hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n    onCopy: function onCopy(event) {\n      var _a, _b;\n      if (this.selectedIndex === -1) return;\n      var currentItem = this.selectedItems[this.selectedIndex];\n      var currentItemText = this.getText(currentItem);\n      (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.setData('text/plain', currentItemText);\n      (_b = event.clipboardData) === null || _b === void 0 ? void 0 : _b.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n  }\n});","map":{"version":3,"names":["VSelect","defaultMenuProps","VSelectMenuProps","VTextField","mergeData","getObjectValueByPath","getPropertyFromItem","keyCodes","_objectSpread","offsetY","offsetOverflow","transition","extend","name","props","autoSelectFirst","type","Boolean","filter","Function","_default","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","data","lazySearch","computed","classes","call","selectedIndex","computedItems","filteredItems","selectedValues","_this","selectedItems","map","getValue","hasDisplayedItems","_this2","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","_this3","isSearching","internalSearch","allItems","value","text","get","set","val","$emit","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","concat","trim","_this4","find","i","valueComparator","internalValue","listData","items","virtualizedItems","watch","document","addEventListener","onCopy","$refs","input","select","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","destroyed","methods","onFilteredItemsChanged","_this5","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","left","right","backspace","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","setValue","selectItem","clearableCallback","genInput","attrs","autocomplete","domProps","genInputSlot","slot","role","genSelections","onClick","e","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","home","end","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","_this6","event","currentItem","currentItemText","_a","clipboardData","setData","_b"],"sources":["../../../src/components/VAutocomplete/VAutocomplete.ts"],"sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}