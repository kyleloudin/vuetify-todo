{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Localbase from 'localbase';\nvar db = new Localbase('db');\ndb.config.debug = false;\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [],\n    snackbar: {\n      show: false,\n      text: ''\n    },\n    sorting: false\n  },\n  mutations: {\n    setSearch: function setSearch(state, value) {\n      state.search = value;\n    },\n    addTask: function addTask(state, newTask) {\n      state.tasks.push(newTask);\n    },\n    doneTask: function doneTask(state, id) {\n      var task = state.tasks.filter(function (task) {\n        return task.id === id;\n      })[0];\n      task.done = !task.done;\n    },\n    deleteTask: function deleteTask(state, id) {\n      state.tasks = state.tasks.filter(function (task) {\n        return task.id !== id;\n      });\n    },\n    updateTaskTitle: function updateTaskTitle(state, payload) {\n      var task = state.tasks.filter(function (task) {\n        return task.id === payload.id;\n      })[0];\n      task.title = payload.title;\n    },\n    updateTaskDueDate: function updateTaskDueDate(state, payload) {\n      var task = state.tasks.filter(function (task) {\n        return task.id === payload.id;\n      })[0];\n      task.dueDate = payload.dueDate;\n    },\n    setTasks: function setTasks(state, tasks) {\n      state.tasks = tasks;\n    },\n    showSnackbar: function showSnackbar(state, text) {\n      var timeout = 0;\n      if (state.snackbar.show) {\n        state.snackbar.show = false;\n        timeout = 300;\n      }\n      setTimeout(function () {\n        state.snackbar.show = true;\n        state.snackbar.text = text;\n      }, timeout);\n    },\n    hideSnackbar: function hideSnackbar(state) {\n      state.snackbar.show = false;\n    },\n    toggleSorting: function toggleSorting(state) {\n      state.sorting = !state.sorting;\n    }\n  },\n  actions: {\n    addTask: function addTask(_ref, newTaskTitle) {\n      var commit = _ref.commit;\n      var newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null\n      };\n      db.collection('tasks').add(newTask).then(function () {\n        commit('addTask', newTask);\n        commit('showSnackbar', 'Task added!');\n      });\n    },\n    doneTask: function doneTask(_ref2, id) {\n      var state = _ref2.state,\n        commit = _ref2.commit;\n      var task = state.tasks.filter(function (task) {\n        return task.id === id;\n      })[0];\n      db.collection('tasks').doc({\n        id: id\n      }).update({\n        done: !task.done\n      }).then(function () {\n        commit('doneTask', id);\n      });\n    },\n    deleteTask: function deleteTask(_ref3, id) {\n      var commit = _ref3.commit;\n      db.collection('tasks').doc({\n        id: id\n      })[\"delete\"]().then(function () {\n        commit('deleteTask', id);\n        commit('showSnackbar', 'Task deleted!');\n      });\n    },\n    updateTaskTitle: function updateTaskTitle(_ref4, payload) {\n      var commit = _ref4.commit;\n      db.collection('tasks').doc({\n        id: payload.id\n      }).update({\n        title: payload.title\n      }).then(function () {\n        commit('updateTaskTitle', payload);\n        commit('showSnackbar', 'Task updated!');\n      });\n    },\n    updateTaskDueDate: function updateTaskDueDate(_ref5, payload) {\n      var commit = _ref5.commit;\n      db.collection('tasks').doc({\n        id: payload.id\n      }).update({\n        dueDate: payload.dueDate\n      }).then(function () {\n        commit('updateTaskDueDate', payload);\n        commit('showSnackbar', 'Due Date Updated!');\n      });\n    },\n    setTasks: function setTasks(_ref6, tasks) {\n      var commit = _ref6.commit;\n      db.collection('tasks').set(tasks);\n      commit('setTasks', tasks);\n    },\n    getTasks: function getTasks(_ref7) {\n      var commit = _ref7.commit;\n      db.collection('tasks').get().then(function (tasks) {\n        commit('setTasks', tasks);\n      });\n    }\n  },\n  getters: {\n    tasksFiltered: function tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks;\n      }\n      return state.tasks.filter(function (task) {\n        return task.title.toLowerCase().includes(state.search.toLowerCase());\n      });\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","Localbase","db","config","debug","use","Store","state","appTitle","process","env","VUE_APP_TITLE","search","tasks","snackbar","show","text","sorting","mutations","setSearch","value","addTask","newTask","push","doneTask","id","task","filter","done","deleteTask","updateTaskTitle","payload","title","updateTaskDueDate","dueDate","setTasks","showSnackbar","timeout","setTimeout","hideSnackbar","toggleSorting","actions","_ref","newTaskTitle","commit","Date","now","collection","add","then","_ref2","doc","update","_ref3","_ref4","_ref5","_ref6","set","getTasks","_ref7","get","getters","tasksFiltered","toLowerCase","includes"],"sources":["/Users/kyleloudin/Desktop/repo/vuetify-todo/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Localbase from 'localbase'\n\nlet db = new Localbase('db')\ndb.config.debug = false\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [\n\n    ],\n    snackbar: {\n      show: false,\n      text: ''\n    },\n    sorting: false\n  },\n  mutations: {\n    setSearch(state, value) {\n      state.search = value\n    },\n\n    addTask(state, newTask) {\n      state.tasks.push(newTask)\n    },\n    doneTask(state, id) {\n      let task = state.tasks.filter(task => task.id === id)[0]\n      task.done = !task.done\n    },\n    deleteTask(state, id) {\n      state.tasks = state.tasks.filter(task => task.id !== id)\n    },\n    updateTaskTitle(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0]\n      task.title = payload.title\n    },\n    updateTaskDueDate(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0]\n      task.dueDate = payload.dueDate\n    },\n    setTasks(state, tasks) {\n      state.tasks = tasks\n    },\n\n    showSnackbar(state, text) {\n      let timeout = 0\n      if (state.snackbar.show) {\n        state.snackbar.show = false\n        timeout = 300\n      }\n      setTimeout(() => {\n        state.snackbar.show = true\n        state.snackbar.text = text\n      }, timeout)\n    },\n    hideSnackbar(state) {\n      state.snackbar.show = false\n    },\n\n    toggleSorting(state) {\n      state.sorting = !state.sorting\n    }\n  },\n  actions: {\n    addTask({ commit }, newTaskTitle) {\n      let newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null\n      }\n      db.collection('tasks').add(newTask).then(() => {\n        commit('addTask', newTask)\n        commit('showSnackbar', 'Task added!')\n      })\n    },\n    doneTask({ state, commit }, id) {\n      let task = state.tasks.filter(task => task.id === id)[0]\n      db.collection('tasks').doc({ id: id }).update({\n        done: !task.done\n      }).then(() => {\n        commit('doneTask', id)\n      })\n    },\n    deleteTask({ commit }, id) {\n      db.collection('tasks').doc({ id: id }).delete().then(() => {\n        commit('deleteTask', id)\n        commit('showSnackbar', 'Task deleted!')\n      })\n    },\n    updateTaskTitle({ commit }, payload) {\n      db.collection('tasks').doc({ id: payload.id }).update({\n        title: payload.title\n      }).then(() => {\n        commit('updateTaskTitle', payload)\n        commit('showSnackbar', 'Task updated!')\n      })\n    },\n    updateTaskDueDate({ commit }, payload) {\n      db.collection('tasks').doc({ id: payload.id }).update({\n        dueDate: payload.dueDate\n      }).then(() => {\n        commit('updateTaskDueDate', payload)\n        commit('showSnackbar', 'Due Date Updated!')\n      })\n    },\n    setTasks({ commit }, tasks) {\n      db.collection('tasks').set(tasks)\n      commit('setTasks', tasks)\n    },\n    getTasks({ commit }) {\n      db.collection('tasks').get().then(tasks => {\n        commit('setTasks', tasks)\n      })\n    }\n  },\n  getters: {\n    tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks\n      }\n      return state.tasks.filter(task =>\n        task.title.toLowerCase().includes(state.search.toLowerCase())\n      )\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}